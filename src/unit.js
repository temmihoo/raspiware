// Generated by CoffeeScript 1.7.1
(function() {
  var noop, oops, result, thrown, unit;

  unit = (function() {
    function unit() {}

    unit.prototype.runCount = 0;

    unit.prototype.failCount = 0;

    unit.prototype.assert = function(flag) {
      if (!flag) {
        throw new Error();
      }
    };

    unit.runAll = function(tests) {
      var result, test, _i, _len;
      result = new unit();
      for (_i = 0, _len = tests.length; _i < _len; _i++) {
        test = tests[_i];
        result.runTest(test);
      }
      return result;
    };

    unit.run = function(test) {
      return unit.runAll([test]);
    };

    unit.prototype.runTest = function(test) {
      this.runCount++;
      try {
        return test();
      } catch (_error) {
        return this.failCount++;
      }
    };

    return unit;

  })();

  thrown = false;

  result = new unit();

  try {
    unit.assert(false);
  } catch (_error) {
    thrown = true;
  }

  if (!thrown) {
    throw new Error();
  }

  result = unit.run(function() {});

  result.assert(result.runCount === 1);

  result.assert(result.failCount === 0);

  result = unit.run(function() {
    throw new Error();
  });

  result.assert(result.runCount === 1);

  result.assert(result.failCount === 1);

  noop = function() {};

  result = unit.runAll([noop, noop]);

  result.assert(result.runCount === 2);

  result.assert(result.failCount === 0);

  oops = function() {
    throw new Error();
  };

  result = unit.runAll([oops, noop]);

  result.assert(result.runCount === 2);

  result.assert(result.failCount === 1);

  result = unit.runAll([function() {}]);

  result.assert(result.runCount === 1);

  result.assert(result.failCount === 0);

  module.exports = unit;

  console.log('unit.coffee says Success !!!');

}).call(this);
